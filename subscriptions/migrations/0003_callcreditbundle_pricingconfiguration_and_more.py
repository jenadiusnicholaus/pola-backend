# Generated by Django 5.0.6 on 2025-10-15 16:10

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('subscriptions', '0002_add_currency_fields'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CallCreditBundle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('minutes', models.IntegerField(help_text='Total minutes in bundle')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('validity_days', models.IntegerField(help_text='Days until expiry after purchase')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Call Credit Bundle',
                'verbose_name_plural': 'Call Credit Bundles',
                'ordering': ['price'],
            },
        ),
        migrations.CreateModel(
            name='PricingConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_type', models.CharField(choices=[('MOBILE_ADVOCATE', 'Mobile Consultation - Advocate'), ('MOBILE_LAWYER', 'Mobile Consultation - Lawyer'), ('MOBILE_PARALEGAL', 'Mobile Consultation - Paralegal'), ('PHYSICAL_CONSULTATION', 'Physical Consultation (Any Type)'), ('TEMPLATE_DOWNLOAD', 'Legal Template Download'), ('GENERATED_DOCUMENT', 'Generated Legal Document'), ('STUDY_MATERIAL_BASIC', 'Study Material - Basic'), ('STUDY_MATERIAL_ADVANCED', 'Study Material - Advanced')], max_length=50, unique=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('platform_commission_percent', models.DecimalField(decimal_places=2, default=60.0, help_text='Platform commission percentage (default 60%)', max_digits=5, validators=[django.core.validators.MinValueValidator(0)])),
                ('consultant_share_percent', models.DecimalField(decimal_places=2, default=40.0, help_text='Consultant/Uploader share percentage (default 40%)', max_digits=5, validators=[django.core.validators.MinValueValidator(0)])),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Pricing Configuration',
                'verbose_name_plural': 'Pricing Configurations',
                'ordering': ['service_type'],
            },
        ),
        migrations.CreateModel(
            name='ConsultantRegistrationRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('consultant_type', models.CharField(choices=[('advocate', 'Advocate'), ('lawyer', 'Lawyer'), ('paralegal', 'Paralegal')], max_length=20)),
                ('full_name', models.CharField(max_length=255)),
                ('professional_license_number', models.CharField(blank=True, max_length=100)),
                ('years_of_experience', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('specialization', models.TextField(help_text='Areas of legal expertise')),
                ('license_document', models.FileField(blank=True, null=True, upload_to='consultant_licenses/')),
                ('id_document', models.FileField(upload_to='consultant_ids/')),
                ('cv_document', models.FileField(blank=True, null=True, upload_to='consultant_cvs/')),
                ('additional_documents', models.FileField(blank=True, null=True, upload_to='consultant_docs/')),
                ('phone_number', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=254)),
                ('city', models.CharField(max_length=100)),
                ('physical_address', models.TextField(blank=True)),
                ('offers_mobile_consultations', models.BooleanField(default=True)),
                ('offers_physical_consultations', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('pending', 'Pending Review'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('admin_notes', models.TextField(blank=True, help_text='Admin review notes or rejection reason')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_consultant_requests', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consultant_requests', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Consultant Registration Request',
                'verbose_name_plural': 'Consultant Registration Requests',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ConsultantProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('consultant_type', models.CharField(choices=[('advocate', 'Advocate'), ('lawyer', 'Lawyer'), ('paralegal', 'Paralegal')], max_length=20)),
                ('specialization', models.TextField()),
                ('years_of_experience', models.IntegerField()),
                ('offers_mobile_consultations', models.BooleanField(default=True)),
                ('offers_physical_consultations', models.BooleanField(default=False)),
                ('city', models.CharField(blank=True, max_length=100)),
                ('is_available', models.BooleanField(default=True, help_text='Currently accepting consultations')),
                ('total_consultations', models.IntegerField(default=0)),
                ('total_earnings', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('average_rating', models.DecimalField(decimal_places=2, default=0, max_digits=3, validators=[django.core.validators.MinValueValidator(0)])),
                ('total_reviews', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='consultant_profile', to=settings.AUTH_USER_MODEL)),
                ('registration_request', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_profile', to='subscriptions.consultantregistrationrequest')),
            ],
            options={
                'verbose_name': 'Consultant Profile',
                'verbose_name_plural': 'Consultant Profiles',
                'ordering': ['-average_rating', '-total_consultations'],
            },
        ),
        migrations.CreateModel(
            name='ConsultationBooking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('booking_type', models.CharField(choices=[('mobile', 'Mobile Consultation (In-App Call)'), ('physical', 'Physical Consultation')], max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending Confirmation'), ('confirmed', 'Confirmed'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('no_show', 'No Show')], default='pending', max_length=20)),
                ('scheduled_date', models.DateTimeField()),
                ('scheduled_duration_minutes', models.IntegerField(default=30)),
                ('actual_start_time', models.DateTimeField(blank=True, null=True)),
                ('actual_end_time', models.DateTimeField(blank=True, null=True)),
                ('actual_duration_minutes', models.IntegerField(default=0)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('platform_commission', models.DecimalField(decimal_places=2, max_digits=10)),
                ('consultant_earnings', models.DecimalField(decimal_places=2, max_digits=10)),
                ('meeting_location', models.TextField(blank=True, help_text='For physical consultations')),
                ('client_notes', models.TextField(blank=True, help_text="Client's consultation topic/questions")),
                ('consultant_notes', models.TextField(blank=True, help_text="Consultant's session notes")),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consultation_bookings', to=settings.AUTH_USER_MODEL)),
                ('consultant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consultant_bookings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Consultation Booking',
                'verbose_name_plural': 'Consultation Bookings',
                'ordering': ['-scheduled_date'],
            },
        ),
        migrations.CreateModel(
            name='ConsultantEarnings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_type', models.CharField(max_length=50)),
                ('gross_amount', models.DecimalField(decimal_places=2, help_text='Total booking amount', max_digits=10)),
                ('platform_commission', models.DecimalField(decimal_places=2, help_text="Platform's share (60%)", max_digits=10)),
                ('net_earnings', models.DecimalField(decimal_places=2, help_text="Consultant's share (40%)", max_digits=10)),
                ('paid_out', models.BooleanField(default=False)),
                ('payout_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('consultant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consultant_earnings', to=settings.AUTH_USER_MODEL)),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='earnings_record', to='subscriptions.consultationbooking')),
            ],
            options={
                'verbose_name': 'Consultant Earnings',
                'verbose_name_plural': 'Consultant Earnings',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='GeneratedDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(choices=[('affidavit', 'Affidavit'), ('contract', 'Contract'), ('agreement', 'Agreement'), ('petition', 'Petition'), ('notice', 'Notice'), ('letter', 'Legal Letter'), ('other', 'Other')], max_length=50)),
                ('title', models.CharField(max_length=255)),
                ('template_used', models.CharField(blank=True, max_length=255)),
                ('document_data', models.JSONField(help_text='Data used to generate document')),
                ('generated_file', models.FileField(upload_to='generated_documents/')),
                ('was_free', models.BooleanField(default=False, help_text='Used monthly free document quota')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='generated_docs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Generated Document',
                'verbose_name_plural': 'Generated Documents',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='GeneratedDocumentPurchase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount_paid', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_method', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchases', to='subscriptions.generateddocument')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='document_purchases', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Generated Document Purchase',
                'verbose_name_plural': 'Generated Document Purchases',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UploaderEarnings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_type', models.CharField(max_length=50)),
                ('gross_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('platform_commission', models.DecimalField(decimal_places=2, max_digits=10)),
                ('net_earnings', models.DecimalField(decimal_places=2, max_digits=10)),
                ('paid_out', models.BooleanField(default=False)),
                ('payout_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('material', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='subscriptions.learningmaterial')),
                ('uploader', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='uploader_earnings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Uploader Earnings',
                'verbose_name_plural': 'Uploader Earnings',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserCallCredit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_minutes', models.IntegerField()),
                ('remaining_minutes', models.IntegerField()),
                ('purchase_date', models.DateTimeField(auto_now_add=True)),
                ('expiry_date', models.DateTimeField()),
                ('status', models.CharField(choices=[('active', 'Active'), ('expired', 'Expired'), ('depleted', 'Fully Used')], default='active', max_length=20)),
                ('bundle', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='subscriptions.callcreditbundle')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='call_credits', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Call Credit',
                'verbose_name_plural': 'User Call Credits',
                'ordering': ['expiry_date'],
            },
        ),
        migrations.CreateModel(
            name='CallSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('duration_minutes', models.IntegerField(default=0)),
                ('call_quality_rating', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='call_sessions', to='subscriptions.consultationbooking')),
                ('call_credit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='subscriptions.usercallcredit')),
            ],
            options={
                'verbose_name': 'Call Session',
                'verbose_name_plural': 'Call Sessions',
                'ordering': ['-start_time'],
            },
        ),
        migrations.CreateModel(
            name='MaterialPurchase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount_paid', models.DecimalField(decimal_places=2, max_digits=10)),
                ('platform_commission', models.DecimalField(decimal_places=2, max_digits=10)),
                ('uploader_earnings', models.DecimalField(decimal_places=2, max_digits=10)),
                ('download_count', models.IntegerField(default=0)),
                ('last_downloaded', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('buyer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='material_purchases', to=settings.AUTH_USER_MODEL)),
                ('material', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='material_purchases', to='subscriptions.learningmaterial')),
            ],
            options={
                'verbose_name': 'Material Purchase',
                'verbose_name_plural': 'Material Purchases',
                'ordering': ['-created_at'],
                'unique_together': {('buyer', 'material')},
            },
        ),
        migrations.CreateModel(
            name='PaymentTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(choices=[('subscription', 'Subscription Payment'), ('consultation', 'Consultation Payment'), ('document', 'Document Purchase'), ('material', 'Study Material Purchase'), ('call_credit', 'Call Credit Purchase'), ('refund', 'Refund')], max_length=50)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('currency', models.CharField(default='TZS', max_length=3)),
                ('payment_method', models.CharField(choices=[('azampay', 'AzamPay'), ('mpesa', 'M-Pesa'), ('tigopesa', 'Tigo Pesa'), ('card', 'Card Payment'), ('bank', 'Bank Transfer')], max_length=50)),
                ('payment_reference', models.CharField(max_length=255, unique=True)),
                ('gateway_reference', models.CharField(blank=True, help_text='Reference from payment gateway', max_length=255)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('failed', 'Failed'), ('refunded', 'Refunded')], default='pending', max_length=20)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('related_booking', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='subscriptions.consultationbooking')),
                ('related_subscription', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='subscriptions.usersubscription')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payment_transactions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Payment Transaction',
                'verbose_name_plural': 'Payment Transactions',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user', '-created_at'], name='subscriptio_user_id_383c81_idx'), models.Index(fields=['payment_reference'], name='subscriptio_payment_84029a_idx')],
            },
        ),
    ]
