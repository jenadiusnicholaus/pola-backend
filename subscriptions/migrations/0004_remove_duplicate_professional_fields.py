# Generated by Django 5.2.7 on 2025-10-15 16:56

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('subscriptions', '0003_callcreditbundle_pricingconfiguration_and_more'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='transaction',
            name='related_subscription',
        ),
        migrations.RemoveField(
            model_name='transaction',
            name='related_voucher',
        ),
        migrations.RemoveField(
            model_name='transaction',
            name='wallet',
        ),
        migrations.RemoveField(
            model_name='wallet',
            name='user',
        ),
        migrations.RemoveField(
            model_name='consultantregistrationrequest',
            name='city',
        ),
        migrations.RemoveField(
            model_name='consultantregistrationrequest',
            name='email',
        ),
        migrations.RemoveField(
            model_name='consultantregistrationrequest',
            name='full_name',
        ),
        migrations.RemoveField(
            model_name='consultantregistrationrequest',
            name='phone_number',
        ),
        migrations.RemoveField(
            model_name='consultantregistrationrequest',
            name='physical_address',
        ),
        migrations.RemoveField(
            model_name='consultantregistrationrequest',
            name='professional_license_number',
        ),
        migrations.RemoveField(
            model_name='consultantregistrationrequest',
            name='specialization',
        ),
        migrations.RemoveField(
            model_name='consultantregistrationrequest',
            name='years_of_experience',
        ),
        migrations.AddField(
            model_name='consultantregistrationrequest',
            name='preferred_consultation_city',
            field=models.CharField(blank=True, help_text='City for physical consultations (if applicable)', max_length=100),
        ),
        migrations.AlterField(
            model_name='consultantregistrationrequest',
            name='additional_documents',
            field=models.FileField(blank=True, help_text='Any additional certifications or credentials', null=True, upload_to='consultant_docs/'),
        ),
        migrations.AlterField(
            model_name='consultantregistrationrequest',
            name='admin_notes',
            field=models.TextField(blank=True, help_text='Admin review notes, feedback, or rejection reason'),
        ),
        migrations.AlterField(
            model_name='consultantregistrationrequest',
            name='cv_document',
            field=models.FileField(blank=True, help_text='Professional CV/Resume', null=True, upload_to='consultant_cvs/'),
        ),
        migrations.AlterField(
            model_name='consultantregistrationrequest',
            name='id_document',
            field=models.FileField(help_text='National ID or Passport for identity verification', upload_to='consultant_ids/'),
        ),
        migrations.AlterField(
            model_name='consultantregistrationrequest',
            name='license_document',
            field=models.FileField(blank=True, help_text='Professional license certificate (if not already in PolaUser documents)', null=True, upload_to='consultant_licenses/'),
        ),
        migrations.AlterField(
            model_name='consultantregistrationrequest',
            name='offers_mobile_consultations',
            field=models.BooleanField(default=True, help_text='Willing to provide mobile/video consultations'),
        ),
        migrations.AlterField(
            model_name='consultantregistrationrequest',
            name='offers_physical_consultations',
            field=models.BooleanField(default=False, help_text='Willing to provide in-person consultations'),
        ),
        migrations.DeleteModel(
            name='ConsultationSession',
        ),
        migrations.DeleteModel(
            name='Transaction',
        ),
        migrations.DeleteModel(
            name='Wallet',
        ),
    ]
