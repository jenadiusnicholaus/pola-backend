# Generated by Django 5.2.7 on 2025-10-14 15:58

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DocumentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('standard', 'Standard Document'), ('advanced', 'Advanced Document')], max_length=20)),
                ('name', models.CharField(max_length=200)),
                ('name_sw', models.CharField(help_text='Swahili name', max_length=200)),
                ('description', models.TextField()),
                ('description_sw', models.TextField(help_text='Swahili description')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('template_path', models.CharField(blank=True, help_text='Path to document template', max_length=255)),
                ('required_fields', models.JSONField(default=dict, help_text='Fields required to generate this document')),
                ('is_active', models.BooleanField(default=True)),
                ('downloads_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Document Type',
                'verbose_name_plural': 'Document Types',
                'ordering': ['category', 'name'],
            },
        ),
        migrations.CreateModel(
            name='SubscriptionPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plan_type', models.CharField(choices=[('free_trial', 'Free Trial (24 hours)'), ('monthly', 'Monthly Subscription')], max_length=20, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('name_sw', models.CharField(help_text='Swahili name', max_length=100)),
                ('description', models.TextField()),
                ('description_sw', models.TextField(help_text='Swahili description')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('duration_days', models.IntegerField(help_text='Duration in days (1 for trial, 30 for monthly)')),
                ('is_active', models.BooleanField(default=True)),
                ('full_legal_library_access', models.BooleanField(default=False)),
                ('monthly_questions_limit', models.IntegerField(default=0, help_text='0 = unlimited')),
                ('free_documents_per_month', models.IntegerField(default=0)),
                ('legal_updates', models.BooleanField(default=False)),
                ('forum_access', models.BooleanField(default=False)),
                ('student_hub_access', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Subscription Plan',
                'verbose_name_plural': 'Subscription Plans',
                'ordering': ['price'],
            },
        ),
        migrations.CreateModel(
            name='ConsultationVoucher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('voucher_type', models.CharField(choices=[('mobile', 'Mobile Consultation (In-App Call)'), ('physical', 'Physical Consultation')], max_length=20)),
                ('duration_minutes', models.IntegerField(help_text='Total minutes purchased')),
                ('remaining_minutes', models.IntegerField(help_text='Remaining unused minutes')),
                ('amount_paid', models.DecimalField(decimal_places=2, max_digits=10)),
                ('purchase_date', models.DateTimeField(auto_now_add=True)),
                ('expiry_date', models.DateTimeField()),
                ('status', models.CharField(choices=[('active', 'Active'), ('expired', 'Expired'), ('used', 'Fully Used'), ('cancelled', 'Cancelled')], default='active', max_length=20)),
                ('sessions_count', models.IntegerField(default=0, help_text='Number of sessions this voucher was used for')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consultation_vouchers', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Consultation Voucher',
                'verbose_name_plural': 'Consultation Vouchers',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ConsultationSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('consultation_type', models.CharField(choices=[('mobile', 'Mobile Consultation (In-App Call)'), ('physical', 'Physical Consultation')], max_length=20)),
                ('scheduled_date', models.DateTimeField()),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('duration_minutes', models.IntegerField(default=0, help_text='Actual duration')),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('consultant_share', models.DecimalField(decimal_places=2, max_digits=10)),
                ('app_share', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('ongoing', 'Ongoing'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('no_show', 'No Show')], default='scheduled', max_length=20)),
                ('notes', models.TextField(blank=True, help_text='Session notes or feedback')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='client_sessions', to=settings.AUTH_USER_MODEL)),
                ('consultant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consultant_sessions', to=settings.AUTH_USER_MODEL)),
                ('voucher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sessions', to='subscriptions.consultationvoucher')),
            ],
            options={
                'verbose_name': 'Consultation Session',
                'verbose_name_plural': 'Consultation Sessions',
                'ordering': ['-scheduled_date'],
            },
        ),
        migrations.CreateModel(
            name='DocumentPurchase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount_paid', models.DecimalField(decimal_places=2, max_digits=10)),
                ('was_free', models.BooleanField(default=False, help_text='True if used monthly free document')),
                ('generated_file', models.FileField(blank=True, null=True, upload_to='generated_documents/')),
                ('document_data', models.JSONField(default=dict, help_text='Data used to generate the document')),
                ('download_count', models.IntegerField(default=0)),
                ('last_downloaded', models.DateTimeField(blank=True, null=True)),
                ('purchase_date', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchased_documents', to=settings.AUTH_USER_MODEL)),
                ('document_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='purchases', to='subscriptions.documenttype')),
            ],
            options={
                'verbose_name': 'Document Purchase',
                'verbose_name_plural': 'Document Purchases',
                'ordering': ['-purchase_date'],
            },
        ),
        migrations.CreateModel(
            name='LearningMaterial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uploader_type', models.CharField(choices=[('student', 'Student'), ('lecturer', 'Lecturer'), ('admin', 'Admin')], max_length=20)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('category', models.CharField(choices=[('notes', 'Study Notes'), ('past_papers', 'Past Exam Papers'), ('assignments', 'Assignments'), ('tutorials', 'Tutorials'), ('other', 'Other')], max_length=20)),
                ('file', models.FileField(upload_to='learning_materials/')),
                ('file_size', models.BigIntegerField(help_text='File size in bytes')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('downloads_count', models.IntegerField(default=0)),
                ('total_revenue', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('uploader_earnings', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('is_approved', models.BooleanField(default=False, help_text='Admin approval required')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('uploader', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='uploaded_materials', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Learning Material',
                'verbose_name_plural': 'Learning Materials',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserSubscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('active', 'Active'), ('expired', 'Expired'), ('cancelled', 'Cancelled'), ('pending', 'Pending Payment')], default='pending', max_length=20)),
                ('start_date', models.DateTimeField(auto_now_add=True)),
                ('end_date', models.DateTimeField()),
                ('auto_renew', models.BooleanField(default=False)),
                ('device_id', models.CharField(blank=True, help_text='Device fingerprint for one-device restriction', max_length=255, null=True)),
                ('questions_asked_this_month', models.IntegerField(default=0)),
                ('documents_generated_this_month', models.IntegerField(default=0)),
                ('last_reset_date', models.DateField(auto_now_add=True, help_text='Last date monthly limits were reset')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='subscriptions', to='subscriptions.subscriptionplan')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='subscription', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Subscription',
                'verbose_name_plural': 'User Subscriptions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Wallet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('balance', models.DecimalField(decimal_places=2, default=0, max_digits=12, validators=[django.core.validators.MinValueValidator(0)])),
                ('currency', models.CharField(choices=[('TZS', 'Tanzanian Shilling')], default='TZS', max_length=3)),
                ('is_active', models.BooleanField(default=True)),
                ('total_earnings', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('total_withdrawn', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='wallet', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Wallet',
                'verbose_name_plural': 'Wallets',
            },
        ),
        migrations.CreateModel(
            name='LearningMaterialPurchase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount_paid', models.DecimalField(decimal_places=2, max_digits=10)),
                ('purchase_date', models.DateTimeField(auto_now_add=True)),
                ('download_count', models.IntegerField(default=0)),
                ('last_downloaded', models.DateTimeField(blank=True, null=True)),
                ('buyer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='learning_purchases', to=settings.AUTH_USER_MODEL)),
                ('material', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchases', to='subscriptions.learningmaterial')),
            ],
            options={
                'verbose_name': 'Learning Material Purchase',
                'verbose_name_plural': 'Learning Material Purchases',
                'ordering': ['-purchase_date'],
                'unique_together': {('buyer', 'material')},
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(choices=[('deposit', 'Deposit'), ('withdrawal', 'Withdrawal'), ('subscription', 'Subscription Payment'), ('consultation_purchase', 'Consultation Voucher Purchase'), ('consultation_earning', 'Consultation Earning'), ('document_purchase', 'Document Purchase'), ('learning_material_purchase', 'Learning Material Purchase'), ('learning_material_earning', 'Learning Material Earning'), ('refund', 'Refund'), ('adjustment', 'Admin Adjustment')], max_length=50)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('reference', models.CharField(blank=True, max_length=100, unique=True)),
                ('description', models.TextField()),
                ('payment_method', models.CharField(blank=True, help_text='M-Pesa, Tigo Pesa, Card, etc.', max_length=50, null=True)),
                ('payment_reference', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('related_voucher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='subscriptions.consultationvoucher')),
                ('related_subscription', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='subscriptions.usersubscription')),
                ('wallet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='subscriptions.wallet')),
            ],
            options={
                'verbose_name': 'Transaction',
                'verbose_name_plural': 'Transactions',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['wallet', '-created_at'], name='subscriptio_wallet__a51089_idx'), models.Index(fields=['reference'], name='subscriptio_referen_115781_idx')],
            },
        ),
    ]
