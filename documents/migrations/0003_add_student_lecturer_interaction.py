# Generated by Django 5.2.7 on 2025-10-22 17:05

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('documents', '0002_extend_learning_material_unified_content'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='learningmaterial',
            name='is_lecture_material',
            field=models.BooleanField(default=False, help_text='Indicates if this is official lecture material (uploaded by lecturer)'),
        ),
        migrations.AddField(
            model_name='learningmaterial',
            name='is_verified_quality',
            field=models.BooleanField(default=False, help_text='Lecturer-verified or platform-verified quality content'),
        ),
        migrations.AddField(
            model_name='learningmaterial',
            name='views_count',
            field=models.IntegerField(default=0, help_text='Number of times content was viewed (not downloaded)'),
        ),
        migrations.CreateModel(
            name='LecturerFollow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True)),
                ('notifications_enabled', models.BooleanField(default=True, help_text='Notify student when lecturer uploads new material')),
                ('followed_at', models.DateTimeField(auto_now_add=True)),
                ('lecturer', models.ForeignKey(help_text='Lecturer being followed', on_delete=django.db.models.deletion.CASCADE, related_name='student_followers', to=settings.AUTH_USER_MODEL)),
                ('student', models.ForeignKey(help_text='Student following the lecturer', on_delete=django.db.models.deletion.CASCADE, related_name='following_lecturers', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Lecturer Follow',
                'verbose_name_plural': 'Lecturer Follows',
                'ordering': ['-followed_at'],
                'indexes': [models.Index(fields=['student', '-followed_at'], name='documents_l_student_99d520_idx'), models.Index(fields=['lecturer', '-followed_at'], name='documents_l_lecture_bd1fd2_idx')],
                'unique_together': {('student', 'lecturer')},
            },
        ),
        migrations.CreateModel(
            name='MaterialQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.TextField()),
                ('answer_text', models.TextField(blank=True)),
                ('answered_at', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('open', 'Open'), ('answered', 'Answered'), ('closed', 'Closed')], default='open', max_length=20)),
                ('is_answered_by_uploader', models.BooleanField(default=False, help_text='True if answered by the material uploader (lecturer)')),
                ('helpful_count', models.IntegerField(default=0, help_text='How many found this Q&A helpful')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('answered_by', models.ForeignKey(blank=True, help_text='Person who answered (lecturer preferred)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='material_questions_answered', to=settings.AUTH_USER_MODEL)),
                ('asker', models.ForeignKey(help_text='Student asking the question', on_delete=django.db.models.deletion.CASCADE, related_name='material_questions_asked', to=settings.AUTH_USER_MODEL)),
                ('material', models.ForeignKey(help_text='The material this question is about', on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='documents.learningmaterial')),
            ],
            options={
                'verbose_name': 'Material Question',
                'verbose_name_plural': 'Material Questions',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['material', 'status', '-created_at'], name='documents_m_materia_a9abe5_idx'), models.Index(fields=['asker', '-created_at'], name='documents_m_asker_i_26899d_idx'), models.Index(fields=['answered_by', '-answered_at'], name='documents_m_answere_eb742d_idx')],
            },
        ),
        migrations.CreateModel(
            name='MaterialRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(help_text='Rating from 1 (poor) to 5 (excellent)', validators=[django.core.validators.MinValueValidator(1)])),
                ('review', models.TextField(blank=True, help_text='Optional written review')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('material', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='documents.learningmaterial')),
                ('rater', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='material_ratings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Material Rating',
                'verbose_name_plural': 'Material Ratings',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['material', '-created_at'], name='documents_m_materia_803736_idx'), models.Index(fields=['rating'], name='documents_m_rating_859bcf_idx')],
                'unique_together': {('material', 'rater')},
            },
        ),
    ]
