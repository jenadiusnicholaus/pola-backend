# Generated by Django 5.2.7 on 2025-10-21 08:22

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('hubs', '0002_hub_alter_legaledsubtopic_options_and_more'),
        ('subscriptions', '0010_learningmaterial_content_type_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='legaledtopic',
            options={'ordering': ['display_order', 'name'], 'verbose_name': 'Legal Education Topic', 'verbose_name_plural': 'Legal Education Topics'},
        ),
        migrations.AlterUniqueTogether(
            name='legaledtopic',
            unique_together=set(),
        ),
        migrations.AlterField(
            model_name='legaledtopic',
            name='display_order',
            field=models.IntegerField(default=0, help_text='Display order'),
        ),
        migrations.AlterField(
            model_name='legaledtopic',
            name='slug',
            field=models.SlugField(blank=True, help_text='URL-friendly identifier', max_length=255, unique=True),
        ),
        migrations.CreateModel(
            name='AdvocateDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('file', models.FileField(upload_to='advocates_hub/documents/')),
                ('file_size', models.BigIntegerField(help_text='File size in bytes')),
                ('file_type', models.CharField(blank=True, help_text='MIME type', max_length=50)),
                ('is_standalone', models.BooleanField(default=False, help_text='Not attached to any post')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('uploader', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='advocate_documents', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Advocate Document',
                'verbose_name_plural': 'Advocate Documents',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AdvocatePost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post_type', models.CharField(choices=[('discussion', 'Discussion Post'), ('article', 'Article (Admin)'), ('news', 'News (Admin)'), ('announcement', 'Announcement')], default='discussion', max_length=20)),
                ('title', models.CharField(blank=True, help_text='Post title (optional)', max_length=500)),
                ('content', models.TextField(help_text='Post text content')),
                ('video_url', models.URLField(blank=True, help_text='Video link (YouTube, etc) - playable on screen', null=True)),
                ('likes_count', models.IntegerField(default=0)),
                ('comments_count', models.IntegerField(default=0)),
                ('bookmarks_count', models.IntegerField(default=0)),
                ('is_pinned', models.BooleanField(default=False, help_text='Pin post to top')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(help_text='Post author (must be advocate or admin)', on_delete=django.db.models.deletion.CASCADE, related_name='advocate_posts', to=settings.AUTH_USER_MODEL)),
                ('documents', models.ManyToManyField(blank=True, help_text='Attached documents', related_name='posts', to='hubs.advocatedocument')),
            ],
            options={
                'verbose_name': 'Advocate Post',
                'verbose_name_plural': 'Advocate Posts',
                'ordering': ['-is_pinned', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AdvocateComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('likes_count', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='advocate_comments', to=settings.AUTH_USER_MODEL)),
                ('parent_comment', models.ForeignKey(blank=True, help_text='Parent comment if this is a reply', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='hubs.advocatecomment')),
                ('attached_documents', models.ManyToManyField(blank=True, related_name='comments', to='hubs.advocatedocument')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='hubs.advocatepost')),
            ],
            options={
                'verbose_name': 'Advocate Comment',
                'verbose_name_plural': 'Advocate Comments',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='AdvocatePostBookmark',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookmarks', to='hubs.advocatepost')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='advocate_bookmarks', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Post Bookmark',
                'verbose_name_plural': 'Post Bookmarks',
            },
        ),
        migrations.CreateModel(
            name='AdvocatePostLike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='hubs.advocatepost')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Post Like',
                'verbose_name_plural': 'Post Likes',
            },
        ),
        migrations.CreateModel(
            name='StudentHubComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('likes_count', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_hub_comments', to=settings.AUTH_USER_MODEL)),
                ('material', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_hub_comments', to='subscriptions.learningmaterial')),
                ('parent_comment', models.ForeignKey(blank=True, help_text='Parent comment if this is a reply', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='hubs.studenthubcomment')),
            ],
            options={
                'verbose_name': 'Document Comment',
                'verbose_name_plural': 'Document Comments',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='StudentHubCommentLike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='hubs.studenthubcomment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Comment Like',
                'verbose_name_plural': 'Comment Likes',
            },
        ),
        migrations.CreateModel(
            name='StudentHubDownload',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price_paid', models.DecimalField(decimal_places=2, max_digits=10)),
                ('download_count', models.IntegerField(default=0, help_text='Number of times re-downloaded')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_downloaded_at', models.DateTimeField(auto_now=True)),
                ('downloader', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_hub_downloads', to=settings.AUTH_USER_MODEL)),
                ('material', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_hub_downloads', to='subscriptions.learningmaterial')),
            ],
            options={
                'verbose_name': 'Student Hub Download',
                'verbose_name_plural': 'Student Hub Downloads',
                'ordering': ['-created_at'],
            },
        ),
        migrations.RemoveField(
            model_name='legaledtopic',
            name='hub',
        ),
        migrations.CreateModel(
            name='AdvocateCommentLike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='hubs.advocatecomment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Comment Like',
                'verbose_name_plural': 'Comment Likes',
                'unique_together': {('user', 'comment')},
            },
        ),
        migrations.CreateModel(
            name='AdvocateMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(blank=True, max_length=255)),
                ('message', models.TextField()),
                ('is_read', models.BooleanField(default=False)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_advocate_messages', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_advocate_messages', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Private Message',
                'verbose_name_plural': 'Private Messages',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['recipient', '-created_at'], name='hubs_advoca_recipie_5c5fca_idx'), models.Index(fields=['sender', '-created_at'], name='hubs_advoca_sender__59dcd7_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='advocatepost',
            index=models.Index(fields=['-created_at'], name='hubs_advoca_created_6d7fb5_idx'),
        ),
        migrations.AddIndex(
            model_name='advocatepost',
            index=models.Index(fields=['author', '-created_at'], name='hubs_advoca_author__9970c0_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='advocatepostbookmark',
            unique_together={('user', 'post')},
        ),
        migrations.AlterUniqueTogether(
            name='advocatepostlike',
            unique_together={('user', 'post')},
        ),
        migrations.AlterUniqueTogether(
            name='studenthubcommentlike',
            unique_together={('user', 'comment')},
        ),
        migrations.AlterUniqueTogether(
            name='studenthubdownload',
            unique_together={('material', 'downloader')},
        ),
        migrations.DeleteModel(
            name='Hub',
        ),
    ]
