# Generated by Django 5.0.6 on 2025-10-22 13:34

from django.db import migrations


def rename_tables_and_add_hub_type(apps, schema_editor):
    """
    Rename old Advocate* tables to Hub* tables and add hub_type column
    """
    db_alias = schema_editor.connection.alias
    
    # SQL to rename tables and add hub_type
    with schema_editor.connection.cursor() as cursor:
        # 1. Rename AdvocatePost to HubPost and add hub_type
        cursor.execute("ALTER TABLE hubs_advocatepost RENAME TO hubs_hubpost;")
        cursor.execute("ALTER TABLE hubs_hubpost ADD COLUMN hub_type VARCHAR(20) DEFAULT 'advocates';")
        cursor.execute("UPDATE hubs_hubpost SET hub_type = 'advocates';")
        cursor.execute("ALTER TABLE hubs_hubpost ALTER COLUMN hub_type DROP DEFAULT;")
        cursor.execute("CREATE INDEX hubs_hubpost_hub_type_idx ON hubs_hubpost(hub_type);")
        
        # 2. Rename AdvocateComment to HubComment and add hub_type
        cursor.execute("ALTER TABLE hubs_advocatecomment RENAME TO hubs_hubcomment;")
        cursor.execute("ALTER TABLE hubs_hubcomment ADD COLUMN hub_type VARCHAR(20) DEFAULT 'advocates';")
        cursor.execute("UPDATE hubs_hubcomment SET hub_type = 'advocates';")
        cursor.execute("ALTER TABLE hubs_hubcomment ALTER COLUMN hub_type DROP DEFAULT;")
        cursor.execute("CREATE INDEX hubs_hubcomment_hub_type_idx ON hubs_hubcomment(hub_type);")
        
        # 3. Rename AdvocatePostLike to HubPostLike
        cursor.execute("ALTER TABLE hubs_advocatepostlike RENAME TO hubs_hubpostlike;")
        
        # 4. Rename AdvocateCommentLike to HubCommentLike
        cursor.execute("ALTER TABLE hubs_advocatecommentlike RENAME TO hubs_hubcommentlike;")
        
        # 5. Rename AdvocatePostBookmark to HubPostBookmark
        cursor.execute("ALTER TABLE hubs_advocatepostbookmark RENAME TO hubs_hubpostbookmark;")
        
        # 6. Rename AdvocateMessage to HubMessage and add hub_type
        cursor.execute("ALTER TABLE hubs_advocatemessage RENAME TO hubs_hubmessage;")
        cursor.execute("ALTER TABLE hubs_hubmessage ADD COLUMN hub_type VARCHAR(20) DEFAULT 'advocates';")
        cursor.execute("UPDATE hubs_hubmessage SET hub_type = 'advocates';")
        cursor.execute("ALTER TABLE hubs_hubmessage ALTER COLUMN hub_type DROP DEFAULT;")
        cursor.execute("CREATE INDEX hubs_hubmessage_hub_type_idx ON hubs_hubmessage(hub_type);")


def reverse_rename(apps, schema_editor):
    """
    Reverse the table renames (for migration rollback)
    """
    with schema_editor.connection.cursor() as cursor:
        # Drop indexes
        cursor.execute("DROP INDEX IF EXISTS hubs_hubpost_hub_type_idx;")
        cursor.execute("DROP INDEX IF EXISTS hubs_hubcomment_hub_type_idx;")
        cursor.execute("DROP INDEX IF EXISTS hubs_hubmessage_hub_type_idx;")
        
        # Remove hub_type columns
        cursor.execute("ALTER TABLE hubs_hubpost DROP COLUMN hub_type;")
        cursor.execute("ALTER TABLE hubs_hubcomment DROP COLUMN hub_type;")
        cursor.execute("ALTER TABLE hubs_hubmessage DROP COLUMN hub_type;")
        
        # Rename tables back
        cursor.execute("ALTER TABLE hubs_hubpost RENAME TO hubs_advocatepost;")
        cursor.execute("ALTER TABLE hubs_hubcomment RENAME TO hubs_advocatecomment;")
        cursor.execute("ALTER TABLE hubs_hubpostlike RENAME TO hubs_advocatepostlike;")
        cursor.execute("ALTER TABLE hubs_hubcommentlike RENAME TO hubs_advocatecommentlike;")
        cursor.execute("ALTER TABLE hubs_hubpostbookmark RENAME TO hubs_advocatepostbookmark;")
        cursor.execute("ALTER TABLE hubs_hubmessage RENAME TO hubs_advocatemessage;")


class Migration(migrations.Migration):

    dependencies = [
        ('hubs', '0007_remove_advocatecomment_likes_count_and_more'),
    ]

    operations = [
        migrations.RunPython(rename_tables_and_add_hub_type, reverse_rename),
    ]
