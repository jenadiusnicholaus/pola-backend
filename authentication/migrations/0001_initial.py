# Generated by Django 5.0.6 on 2025-10-11 16:05

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AcademicRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=50, unique=True)),
                ('name_en', models.CharField(max_length=255)),
                ('name_sw', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'academic role',
                'verbose_name_plural': 'academic roles',
                'ordering': ['name_en'],
            },
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'district',
                'verbose_name_plural': 'districts',
                'ordering': ['region__name', 'name'],
            },
        ),
        migrations.CreateModel(
            name='LegalSpecialization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=50, unique=True)),
                ('name_en', models.CharField(max_length=255)),
                ('name_sw', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'legal specialization',
                'verbose_name_plural': 'legal specializations',
                'ordering': ['name_en'],
            },
        ),
        migrations.CreateModel(
            name='PlaceOfWork',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=50, unique=True)),
                ('name_en', models.CharField(max_length=255)),
                ('name_sw', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'place of work',
                'verbose_name_plural': 'places of work',
                'ordering': ['name_en'],
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'region',
                'verbose_name_plural': 'regions',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Specialization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_en', models.CharField(help_text='Practice area name in English', max_length=255, verbose_name='Name (English)')),
                ('name_sw', models.CharField(help_text='Practice area name in Swahili', max_length=255, verbose_name='Name (Swahili)')),
                ('description', models.TextField(blank=True, help_text='Description of this practice area', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'specialization',
                'verbose_name_plural': 'specializations',
                'ordering': ['name_en'],
            },
        ),
        migrations.CreateModel(
            name='PolaUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('date_of_birth', models.DateField(null=True, verbose_name='Birthday')),
                ('agreed_to_Terms', models.BooleanField(default=False)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=1, null=True)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pics/')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('practice_status', models.CharField(choices=[('practising', 'Practising'), ('non_practising', 'Non-Practising')], help_text='Current practice status (active/inactive)', max_length=20, null=True)),
                ('year_established', models.IntegerField(help_text='Year of establishment (for firms) or year of admission to practice (for advocates/lawyers)', null=True)),
                ('roll_number', models.CharField(max_length=50, null=True, unique=True)),
                ('bar_membership_number', models.CharField(blank=True, max_length=50, null=True)),
                ('years_of_experience', models.PositiveIntegerField(null=True)),
                ('firm_name', models.CharField(max_length=255, null=True)),
                ('number_of_lawyers', models.PositiveIntegerField(null=True)),
                ('university_name', models.CharField(max_length=255, null=True)),
                ('year_of_study', models.PositiveIntegerField(blank=True, null=True)),
                ('academic_qualification', models.CharField(blank=True, max_length=255, null=True)),
                ('ward', models.CharField(max_length=100, null=True)),
                ('id_number', models.CharField(max_length=50, null=True)),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('associated_law_firm', models.ForeignKey(blank=True, limit_choices_to={'user_role__role_name': 'law_firm'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='associated_professionals', to=settings.AUTH_USER_MODEL)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='customuser_set', related_query_name='customuser', to='auth.group', verbose_name='groups')),
                ('managing_partner', models.ForeignKey(blank=True, limit_choices_to={'user_role__role_name': 'advocate'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='managing_firms', to=settings.AUTH_USER_MODEL)),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='customuser_set', related_query_name='customuser', to='auth.permission', verbose_name='user permissions')),
                ('academic_role', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users', to='authentication.academicrole')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(max_length=15, null=True, verbose_name='Phone Number')),
                ('phone_is_verified', models.BooleanField(default=False)),
                ('website', models.URLField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='contact', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'contact',
                'verbose_name_plural': 'contacts',
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(choices=[('registration', 'Registration Certificate'), ('practice', 'Practice License'), ('academic', 'Academic Certificate'), ('other', 'Other Document')], max_length=20)),
                ('file', models.FileField(upload_to='user_documents/')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('verification_status', models.CharField(choices=[('pending', 'Pending Verification'), ('verified', 'Verified'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('verification_date', models.DateTimeField(blank=True, null=True)),
                ('verification_notes', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to=settings.AUTH_USER_MODEL)),
                ('verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_documents', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'document',
                'verbose_name_plural': 'documents',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OperatingDistrict',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='operating_professionals', to='authentication.district')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='operating_districts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'operating district',
                'verbose_name_plural': 'operating districts',
                'unique_together': {('user', 'district')},
            },
        ),
        migrations.AddField(
            model_name='polauser',
            name='districts',
            field=models.ManyToManyField(help_text='Districts where the professional operates/practices', related_name='professionals', through='authentication.OperatingDistrict', to='authentication.district', verbose_name='Districts of Operation'),
        ),
        migrations.AddField(
            model_name='polauser',
            name='place_of_work',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='professionals', to='authentication.placeofwork'),
        ),
        migrations.CreateModel(
            name='OperatingRegion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='operating_regions', to=settings.AUTH_USER_MODEL)),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='operating_professionals', to='authentication.region')),
            ],
            options={
                'verbose_name': 'operating region',
                'verbose_name_plural': 'operating regions',
                'unique_together': {('user', 'region')},
            },
        ),
        migrations.AddField(
            model_name='district',
            name='region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='districts', to='authentication.region'),
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ward', models.CharField(max_length=100, null=True)),
                ('office_address', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='address', to=settings.AUTH_USER_MODEL)),
                ('district', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='addresses', to='authentication.district')),
                ('region', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='addresses', to='authentication.region')),
            ],
            options={
                'verbose_name': 'address',
                'verbose_name_plural': 'addresses',
            },
        ),
        migrations.AddField(
            model_name='polauser',
            name='regional_champter',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='chamber_professionals', to='authentication.region'),
        ),
        migrations.AddField(
            model_name='polauser',
            name='regions',
            field=models.ManyToManyField(help_text='Regions where the professional operates/practices or has registered chambers', related_name='professionals', through='authentication.OperatingRegion', to='authentication.region', verbose_name='Regional Chambers/Regions of Operation'),
        ),
        migrations.CreateModel(
            name='RolePermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth.permission')),
            ],
            options={
                'verbose_name': 'role permission',
                'verbose_name_plural': 'role permissions',
            },
        ),
        migrations.CreateModel(
            name='ProfessionalSpecialization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('years_of_experience', models.PositiveIntegerField(blank=True, help_text='Years of experience in this specific practice area', null=True)),
                ('is_primary', models.BooleanField(default=False, help_text="Whether this is one of the professional's primary practice areas")),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='professional_specializations', to=settings.AUTH_USER_MODEL)),
                ('specialization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='professionals', to='authentication.specialization')),
            ],
            options={
                'verbose_name': 'professional specialization',
                'verbose_name_plural': 'professional specializations',
                'ordering': ['-is_primary', '-years_of_experience'],
                'unique_together': {('user', 'specialization')},
            },
        ),
        migrations.AddField(
            model_name='polauser',
            name='specializations',
            field=models.ManyToManyField(help_text='Legal fields of expertise or areas of specialization', related_name='users', through='authentication.ProfessionalSpecialization', to='authentication.specialization', verbose_name='Practice Areas/Specializations'),
        ),
        migrations.CreateModel(
            name='UserRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role_name', models.CharField(choices=[('lawyer', 'Lawyer'), ('advocate', 'Advocate'), ('paralegal', 'Paralegal'), ('law_student', 'Law Student'), ('law_firm', 'Law Firm'), ('citizen', 'Citizen')], max_length=255, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('permissions', models.ManyToManyField(related_name='roles', through='authentication.RolePermission', to='auth.permission', verbose_name='permissions')),
            ],
        ),
        migrations.AddField(
            model_name='rolepermission',
            name='role',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='role_permissions', to='authentication.userrole'),
        ),
        migrations.AddField(
            model_name='polauser',
            name='user_role',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='authentication.userrole'),
        ),
        migrations.CreateModel(
            name='Verification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending Verification'), ('verified', 'Verified'), ('rejected', 'Rejected')], default='pending', help_text='Overall verification status of the user', max_length=20)),
                ('current_step', models.CharField(choices=[('documents', 'Document Verification'), ('identity', 'Identity Verification'), ('contact', 'Contact Information'), ('role_specific', 'Role-Specific Requirements'), ('final', 'Final Approval')], default='documents', help_text='Current verification step', max_length=20)),
                ('verification_date', models.DateTimeField(blank=True, null=True)),
                ('rejection_reason', models.TextField(blank=True, null=True)),
                ('verification_notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='verification', to=settings.AUTH_USER_MODEL)),
                ('verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_users', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'verification',
                'verbose_name_plural': 'verifications',
            },
        ),
        migrations.CreateModel(
            name='VerificationDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='verification_documents', to='authentication.document')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='verification_documents', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='district',
            unique_together={('name', 'region')},
        ),
        migrations.AlterUniqueTogether(
            name='rolepermission',
            unique_together={('role', 'permission')},
        ),
    ]
